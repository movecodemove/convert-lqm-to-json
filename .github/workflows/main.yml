on:
  pull_request:
    branches:
      - main
    types: [closed]

defaults:
  run:
    shell: bash

jobs:
  test:
    name: ${{ matrix.os }} / ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [MacOS, Ubuntu, Windows]
        python-version: [3.7, 3.8, 3.9]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get cache values
        id: cache-values
        uses: ./.github/actions/cache-values
        with:
          hash: ${{ hashFiles('poetry.lock') }}

      - uses: actions/cache@v2
        id: cache
        with:
          key: ${{ steps.cache-values.outputs.key }}
          path: ${{ steps.cache-values.outputs.path }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        uses: ./.github/actions/dependencies

      - name: Update release version number
        if: ${{ github.event_name == 'pull_request' && github.event.pull_request.merged == true && matrix.os == 'Ubuntu' && matrix.python-version == '3.9' }}
        run: |
          previous=`python -m poetry version -s`
          python -m poetry version patch -q
          current=`python -m poetry version -s`
          sed -i "s/$previous/$current/g" convert_lqm_to_json/__init__.py
          sed -i "s/$previous/$current/g" tests/test___init__.py

      - name: Run tests
        run: python -m poetry run pytest tests

      - name: Tag release
        if: ${{ github.event_name == 'pull_request' && github.event.pull_request.merged == true && matrix.os == 'Ubuntu' && matrix.python-version == '3.9' }}
        run: |
          version=`python -m poetry version -s`
          git config --global user.name "Github Action Bot"
          git config --global user.email "<>"
          git commit -am "Version $version"
          git tag -a "v$version" -m "Version $version"
          git push --follow-tags

      - name: Publish release
        if: ${{ github.event_name == 'pull_request' && github.event.pull_request.merged == true && matrix.os == 'Ubuntu' && matrix.python-version == '3.9' }}
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          python -m poetry config pypi-token.pypi $PYPI_TOKEN
          python -m poetry publish --build
